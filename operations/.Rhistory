knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(kableExtra)
source("utils.R")
dname <- "results/sentiment_A/exp_tolerance/"
tol_exp <- get_data(dname)
tol_exp %>% pivot_longer(c(acc_raw_clean, acc_raw_att, acc_acra_att),
names_to = "Algorithm") %>%
mutate(Algorithm = case_when(Algorithm == "acc_raw_clean" ~ "Raw Clean Data",
Algorithm == "acc_raw_att" ~ "Raw Attacked Data",
Algorithm == "acc_acra_att" ~ "ACRA Attacked Data",
TRUE ~ "be")) %>% group_by(tolerance, Algorithm) %>%
summarise(mean  = mean(value),
lower = mean(value) - 2*sd(value)/sqrt(10),
upper = mean(value) + 2*sd(value)/sqrt(10)) %>%
ggplot(aes(x = tolerance, y = mean, color=Algorithm, linetype=Algorithm)) +
geom_line(size=0.5) + geom_point() +
geom_errorbar(aes(ymin=lower, ymax=upper), size=0.5,
width=0.05,
size=0.1) + theme_minimal() +
labs(title    = "Tolerance vs Accuracy",
subtitle = "Random Forest, Number of Samples = 20",
x = "Tolerance",
y = "Accuracy") +
theme(axis.text.x=element_text(angle=-90, hjust=0, vjust=1)) +
theme(plot.title=element_text(size=15, hjust=0.5, face="bold", vjust=-1)) +
theme(plot.subtitle=element_text(size=12, hjust=0.5, vjust=-1)) +
theme(text = element_text(size=12))
ggsave("img/sent_tolerance.png", device = "png", dpi = 300)
dname <- "results/sentiment_A/exp_nsamples/"
nsamples_exp <- get_data(dname)
nsamples_exp %>% pivot_longer(c(acc_raw_clean, acc_raw_att, acc_acra_att),
names_to = "Algorithm") %>%
mutate(Algorithm = case_when(Algorithm == "acc_raw_clean" ~ "Raw Clean Data",
Algorithm == "acc_raw_att" ~ "Raw Attacked Data",
Algorithm == "acc_acra_att" ~ "ACRA Attacked Data",
TRUE ~ "be")) %>% group_by(n_samples, Algorithm) %>%
summarise(mean  = mean(value),
lower = mean(value) - 2*sd(value)/sqrt(10),
upper = mean(value) + 2*sd(value)/sqrt(10)) %>%
ggplot(aes(x = n_samples, y = mean, color=Algorithm, linetype=Algorithm)) +
geom_line(size=0.5) + geom_point() +
geom_errorbar(aes(ymin=lower, ymax=upper), size=0.5,
position=position_dodge(0.05)) + theme_minimal() +
labs(title    = "Number of Samples vs Accuracy",
subtitle = "Random Forest. Tolerance = 2.",
x = "Number of Samples",
y = "Accuracy") +
theme(axis.text.x=element_text(angle=-90, hjust=0, vjust=1)) +
theme(plot.title=element_text(size=15, hjust=0.5, face="bold", vjust=-1)) +
theme(plot.subtitle=element_text(size=12, hjust=0.5, vjust=-1)) +
theme(text = element_text(size=12)) + theme(legend.position = "none")
ggsave("img/sent_nsamples.png", device = "png", dpi = 300)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(kableExtra)
source("utils.R")
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(kableExtra)
source("utils.R")
dname <- "results/sentiment_A/exp_tolerance/"
tol_exp <- get_data(dname)
tol_df <- tol_exp %>% pivot_longer(c(acc_raw_clean, acc_raw_att, acc_acra_att),
names_to = "Algorithm") %>%
mutate(Algorithm = case_when(Algorithm == "acc_raw_clean" ~ "Raw Clean Data",
Algorithm == "acc_raw_att" ~ "Raw Attacked Data",
Algorithm == "acc_acra_att" ~ "ACRA Attacked Data",
TRUE ~ "be")) %>% group_by(tolerance, Algorithm) %>%
summarise(mean  = mean(value),
lower = mean(value) - 2*sd(value)/sqrt(10),
upper = mean(value) + 2*sd(value)/sqrt(10))
dname <- "results/sentiment_A/exp_nsamples/"
nsamples_exp <- get_data(dname)
samp_df <- nsamples_exp %>% pivot_longer(c(acc_raw_clean, acc_raw_att, acc_acra_att),
names_to = "Algorithm") %>%
mutate(Algorithm = case_when(Algorithm == "acc_raw_clean" ~ "Raw Clean Data",
Algorithm == "acc_raw_att" ~ "Raw Attacked Data",
Algorithm == "acc_acra_att" ~ "ACRA Attacked Data",
TRUE ~ "be")) %>% group_by(n_samples, Algorithm) %>%
summarise(mean  = mean(value),
lower = mean(value) - 2*sd(value)/sqrt(10),
upper = mean(value) + 2*sd(value)/sqrt(10))
tol_df
tol_df <- tol_exp %>% pivot_longer(c(acc_raw_clean, acc_raw_att, acc_acra_att),
names_to = "Algorithm") %>%
mutate(Algorithm = case_when(Algorithm == "acc_raw_clean" ~ "Raw Clean Data",
Algorithm == "acc_raw_att" ~ "Raw Attacked Data",
Algorithm == "acc_acra_att" ~ "ACRA Attacked Data",
TRUE ~ "be")) %>% group_by(tolerance, Algorithm) %>%
summarise(mean  = mean(value),
lower = mean(value) - 2*sd(value)/sqrt(10),
upper = mean(value) + 2*sd(value)/sqrt(10)) %>% mutate(exp="tol")
dname <- "results/sentiment_A/exp_nsamples/"
nsamples_exp <- get_data(dname)
samp_df <- nsamples_exp %>% pivot_longer(c(acc_raw_clean, acc_raw_att, acc_acra_att),
names_to = "Algorithm") %>%
mutate(Algorithm = case_when(Algorithm == "acc_raw_clean" ~ "Raw Clean Data",
Algorithm == "acc_raw_att" ~ "Raw Attacked Data",
Algorithm == "acc_acra_att" ~ "ACRA Attacked Data",
TRUE ~ "be")) %>% group_by(n_samples, Algorithm) %>%
summarise(mean  = mean(value),
lower = mean(value) - 2*sd(value)/sqrt(10),
upper = mean(value) + 2*sd(value)/sqrt(10)) %>% mutate(exp="samp")
tol_df
samp_df
samp_df <- nsamples_exp %>% pivot_longer(c(acc_raw_clean, acc_raw_att, acc_acra_att),
names_to = "Algorithm") %>%
mutate(Algorithm = case_when(Algorithm == "acc_raw_clean" ~ "Raw Clean Data",
Algorithm == "acc_raw_att" ~ "Raw Attacked Data",
Algorithm == "acc_acra_att" ~ "ACRA Attacked Data",
TRUE ~ "be")) %>% group_by(n_samples, Algorithm) %>%
summarise(mean  = mean(value),
lower = mean(value) - 2*sd(value)/sqrt(10),
upper = mean(value) + 2*sd(value)/sqrt(10)) %>% mutate(exp="samp", x=n_samples)
sent_df
samp_df
samp_df <- nsamples_exp %>% pivot_longer(c(acc_raw_clean, acc_raw_att, acc_acra_att),
names_to = "Algorithm") %>%
mutate(Algorithm = case_when(Algorithm == "acc_raw_clean" ~ "Raw Clean Data",
Algorithm == "acc_raw_att" ~ "Raw Attacked Data",
Algorithm == "acc_acra_att" ~ "ACRA Attacked Data",
TRUE ~ "be")) %>% group_by(n_samples, Algorithm) %>%
summarise(mean  = mean(value),
lower = mean(value) - 2*sd(value)/sqrt(10),
upper = mean(value) + 2*sd(value)/sqrt(10)) %>% mutate(exp="samp") %>%
rename(x=n_samples)
samp_df
tol_df <- tol_exp %>% pivot_longer(c(acc_raw_clean, acc_raw_att, acc_acra_att),
names_to = "Algorithm") %>%
mutate(Algorithm = case_when(Algorithm == "acc_raw_clean" ~ "Raw Clean Data",
Algorithm == "acc_raw_att" ~ "Raw Attacked Data",
Algorithm == "acc_acra_att" ~ "ACRA Attacked Data",
TRUE ~ "be")) %>% group_by(tolerance, Algorithm) %>%
summarise(mean  = mean(value),
lower = mean(value) - 2*sd(value)/sqrt(10),
upper = mean(value) + 2*sd(value)/sqrt(10)) %>% mutate(exp="tol") %>%
rename(x=tol)
tol_df
tol_df <- tol_exp %>% pivot_longer(c(acc_raw_clean, acc_raw_att, acc_acra_att),
names_to = "Algorithm") %>%
mutate(Algorithm = case_when(Algorithm == "acc_raw_clean" ~ "Raw Clean Data",
Algorithm == "acc_raw_att" ~ "Raw Attacked Data",
Algorithm == "acc_acra_att" ~ "ACRA Attacked Data",
TRUE ~ "be")) %>% group_by(tolerance, Algorithm) %>%
summarise(mean  = mean(value),
lower = mean(value) - 2*sd(value)/sqrt(10),
upper = mean(value) + 2*sd(value)/sqrt(10)) %>% mutate(exp="tol") %>%
rename(x=tolerance)
dname <- "results/sentiment_A/exp_nsamples/"
nsamples_exp <- get_data(dname)
samp_df <- nsamples_exp %>% pivot_longer(c(acc_raw_clean, acc_raw_att, acc_acra_att),
names_to = "Algorithm") %>%
mutate(Algorithm = case_when(Algorithm == "acc_raw_clean" ~ "Raw Clean Data",
Algorithm == "acc_raw_att" ~ "Raw Attacked Data",
Algorithm == "acc_acra_att" ~ "ACRA Attacked Data",
TRUE ~ "be")) %>% group_by(n_samples, Algorithm) %>%
summarise(mean  = mean(value),
lower = mean(value) - 2*sd(value)/sqrt(10),
upper = mean(value) + 2*sd(value)/sqrt(10)) %>% mutate(exp="samp") %>%
rename(x=n_samples)
bind_rows(tol_df, samp_df)
final_df <- bind_rows(tol_df, samp_df)
final_df
ggplot(final_df, aes(x = x, y = mean, color=Algorithm, linetype=Algorithm)) +
geom_line(size=0.5) + geom_point() + facet_wrap(exp~.) +
geom_errorbar(aes(ymin=lower, ymax=upper), size=0.5,
position=position_dodge(0.05)) + theme_minimal() +
labs(title    = "Number of Samples vs Accuracy",
subtitle = "Random Forest. Tolerance = 2.",
x = "Number of Samples",
y = "Accuracy") +
theme(axis.text.x=element_text(angle=-90, hjust=0, vjust=1)) +
theme(plot.title=element_text(size=15, hjust=0.5, face="bold", vjust=-1)) +
theme(plot.subtitle=element_text(size=12, hjust=0.5, vjust=-1)) +
theme(text = element_text(size=12)) + theme(legend.position = "none")
ggplot(final_df, aes(x = x, y = mean, color=Algorithm, linetype=Algorithm)) +
geom_line(size=0.5) + geom_point() + facet_wrap(exp~., scales = "free") +
geom_errorbar(aes(ymin=lower, ymax=upper), size=0.5,
position=position_dodge(0.05)) + theme_minimal() +
labs(title    = "Number of Samples vs Accuracy",
subtitle = "Random Forest. Tolerance = 2.",
x = "Number of Samples",
y = "Accuracy") +
theme(axis.text.x=element_text(angle=-90, hjust=0, vjust=1)) +
theme(plot.title=element_text(size=15, hjust=0.5, face="bold", vjust=-1)) +
theme(plot.subtitle=element_text(size=12, hjust=0.5, vjust=-1)) +
theme(text = element_text(size=12)) + theme(legend.position = "none")
ggplot(final_df, aes(x = x, y = mean, color=Algorithm, linetype=Algorithm)) +
geom_line(size=0.5) + geom_point() + facet_wrap(exp~., scales = "free") +
geom_errorbar(aes(ymin=lower, ymax=upper), size=0.5,
position=position_dodge(0.05)) + theme_minimal() +
labs(title    = "Number of Samples vs Accuracy",
subtitle = "Random Forest. Tolerance = 2.",
x = "Number of Samples",
y = "Accuracy") +
theme(axis.text.x=element_text(angle=-90, hjust=0, vjust=1)) +
theme(plot.title=element_text(size=15, hjust=0.5, face="bold", vjust=-1)) +
theme(plot.subtitle=element_text(size=12, hjust=0.5, vjust=-1)) +
theme(text = element_text(size=12))
final_Df
final_df
tail(final_Df)
tail(final_df)
ggplot(final_df, aes(x = x, y = mean, color=Algorithm, linetype=Algorithm)) +
geom_line(size=0.5) + geom_point() + facet_wrap(exp~., scales = "free"
labeller = as_labeller(c(tol = "Currents (A)", samp = "Voltage (V)") )) +
ggplot(final_df, aes(x = x, y = mean, color=Algorithm, linetype=Algorithm)) +
geom_line(size=0.5) + geom_point() + facet_wrap(exp~., scales = "free", ncol=2,
labeller = as_labeller(c(tol = "Currents (A)", samp = "Voltage (V)") )) +
xlab(NULL) +
geom_errorbar(aes(ymin=lower, ymax=upper), size=0.5,
position=position_dodge(0.05)) + theme_minimal() +
labs(title    = "Number of Samples vs Accuracy",
subtitle = "Random Forest. Tolerance = 2.",
y = "Accuracy") +
theme(axis.text.x=element_text(angle=-90, hjust=0, vjust=1)) +
theme(plot.title=element_text(size=15, hjust=0.5, face="bold", vjust=-1)) +
theme(plot.subtitle=element_text(size=12, hjust=0.5, vjust=-1)) +
theme(text = element_text(size=12))
ggplot(final_df, aes(x = x, y = mean, color=Algorithm, linetype=Algorithm)) +
geom_line(size=0.5) + geom_point() + facet_wrap(exp~., scales = "free", ncol=2,
strip.position = 'bottom',
labeller = as_labeller(c(tol = "Currents (A)", samp = "Voltage (V)") )) +
xlab(NULL) +
geom_errorbar(aes(ymin=lower, ymax=upper), size=0.5,
position=position_dodge(0.05)) + theme_minimal() +
labs(title    = "Number of Samples vs Accuracy",
subtitle = "Random Forest. Tolerance = 2.",
y = "Accuracy") +
theme(axis.text.x=element_text(angle=-90, hjust=0, vjust=1)) +
theme(plot.title=element_text(size=15, hjust=0.5, face="bold", vjust=-1)) +
theme(plot.subtitle=element_text(size=12, hjust=0.5, vjust=-1)) +
theme(text = element_text(size=12))
ggplot(final_df, aes(x = x, y = mean, color=Algorithm, linetype=Algorithm)) +
geom_line(size=0.5) + geom_point() + facet_wrap(exp~., scales = "free", ncol=2,
strip.position = 'bottom',
labeller = as_labeller(c(tol = "Currents (A)", samp = "Voltage (V)") )) +
xlab(NULL) +
geom_errorbar(aes(ymin=lower, ymax=upper), size=0.5,
position=position_dodge(0.05)) + theme_minimal() +
labs(title    = "Number of Samples vs Accuracy",
subtitle = "Random Forest. Tolerance = 2.",
y = "Accuracy") +
theme(axis.text.x=element_text(angle=-90, hjust=0, vjust=1)) +
theme(plot.title=element_text(size=15, hjust=0.5, face="bold", vjust=-1)) +
theme(plot.subtitle=element_text(size=12, hjust=0.5, vjust=-1)) +
theme(text = element_text(size=12)) + theme(strip.background = element_blank(),
strip.placement='outside')
ggplot(final_df, aes(x = x, y = mean, color=Algorithm, linetype=Algorithm)) +
geom_line(size=0.5) + geom_point() + facet_wrap(exp~., scales = "free", ncol=2,
strip.position = 'bottom',
labeller = as_labeller(c(tol = "Tolerance", samp = "Number of Samples") )) +
xlab(NULL) +
geom_errorbar(aes(ymin=lower, ymax=upper), size=0.5,
position=position_dodge(0.05)) + theme_minimal() +
labs(title    = "Number of Samples vs Accuracy",
subtitle = "Random Forest. Tolerance = 2.",
y = "Accuracy") +
theme(axis.text.x=element_text(angle=-90, hjust=0, vjust=1)) +
theme(plot.title=element_text(size=15, hjust=0.5, face="bold", vjust=-1)) +
theme(plot.subtitle=element_text(size=12, hjust=0.5, vjust=-1)) +
theme(text = element_text(size=12)) + theme(strip.background = element_blank(),
strip.placement='outside')
nsamples_exp %>% pivot_longer(c(acc_raw_clean, acc_raw_att, acc_acra_att),
names_to = "Algorithm") %>%
mutate(Algorithm = case_when(Algorithm == "acc_raw_clean" ~ "Raw Clean Data",
Algorithm == "acc_raw_att" ~ "Raw Attacked Data",
Algorithm == "acc_acra_att" ~ "ACRA Attacked Data",
TRUE ~ "be")) %>% group_by(n_samples, Algorithm) %>%
summarise(mean  = mean(value),
lower = mean(value) - 2*sd(value)/sqrt(10),
upper = mean(value) + 2*sd(value)/sqrt(10)) %>%
ggplot(aes(x = n_samples, y = mean, color=Algorithm, linetype=Algorithm)) +
geom_line(size=0.5) + geom_point() +
geom_errorbar(aes(ymin=lower, ymax=upper), size=0.5,
position=position_dodge(0.05)) + theme_minimal() +
labs(title    = "Number of Samples vs Accuracy",
subtitle = "Random Forest. Tolerance = 2.",
x = "Number of Samples",
y = "Accuracy") +
theme(axis.text.x=element_text(angle=-90, hjust=0, vjust=1)) +
theme(plot.title=element_text(size=15, hjust=0.5, face="bold", vjust=-1)) +
theme(plot.subtitle=element_text(size=12, hjust=0.5, vjust=-1)) +
theme(text = element_text(size=12)) + theme(legend.position = "none")
ggsave("img/sent_nsamples.png", device = "png", width = 5, height = 4,)
nsamples_exp %>% pivot_longer(c(acc_raw_clean, acc_raw_att, acc_acra_att),
names_to = "Algorithm") %>%
mutate(Algorithm = case_when(Algorithm == "acc_raw_clean" ~ "Raw Clean Data",
Algorithm == "acc_raw_att" ~ "Raw Attacked Data",
Algorithm == "acc_acra_att" ~ "ACRA Attacked Data",
TRUE ~ "be")) %>% group_by(n_samples, Algorithm) %>%
summarise(mean  = mean(value),
lower = mean(value) - 2*sd(value)/sqrt(10),
upper = mean(value) + 2*sd(value)/sqrt(10)) %>%
ggplot(aes(x = n_samples, y = mean, color=Algorithm, linetype=Algorithm)) +
geom_line(size=0.5) + geom_point() +
geom_errorbar(aes(ymin=lower, ymax=upper), size=0.5,
position=position_dodge(0.05)) + theme_minimal() +
labs(title    = "Number of Samples vs Accuracy",
subtitle = "Random Forest. Tolerance = 2.",
x = "Number of Samples",
y = "Accuracy") +
theme(axis.text.x=element_text(angle=-90, hjust=0, vjust=1)) +
theme(plot.title=element_text(size=15, hjust=0.5, face="bold", vjust=-1)) +
theme(plot.subtitle=element_text(size=12, hjust=0.5, vjust=-1)) +
theme(text = element_text(size=12)) + theme(legend.position = "none")
ggsave("img/sent_nsamples.png", device = "png", width = 4, height = 4,)
nsamples_exp %>% pivot_longer(c(acc_raw_clean, acc_raw_att, acc_acra_att),
names_to = "Algorithm") %>%
mutate(Algorithm = case_when(Algorithm == "acc_raw_clean" ~ "Raw Clean Data",
Algorithm == "acc_raw_att" ~ "Raw Attacked Data",
Algorithm == "acc_acra_att" ~ "ACRA Attacked Data",
TRUE ~ "be")) %>% group_by(n_samples, Algorithm) %>%
summarise(mean  = mean(value),
lower = mean(value) - 2*sd(value)/sqrt(10),
upper = mean(value) + 2*sd(value)/sqrt(10)) %>%
ggplot(aes(x = n_samples, y = mean, color=Algorithm, linetype=Algorithm)) +
geom_line(size=0.5) + geom_point() +
geom_errorbar(aes(ymin=lower, ymax=upper), size=0.5,
position=position_dodge(0.05)) + theme_minimal() +
labs(title    = "Number of Samples vs Accuracy",
subtitle = "Random Forest. Tolerance = 2.",
x = "Number of Samples",
y = "Accuracy") +
theme(axis.text.x=element_text(angle=-90, hjust=0, vjust=1)) +
theme(plot.title=element_text(size=15, hjust=0.5, face="bold", vjust=-1)) +
theme(plot.subtitle=element_text(size=12, hjust=0.5, vjust=-1)) +
theme(text = element_text(size=12)) + theme(legend.position = "none")
ggsave("img/sent_nsamples.png", device = "png", width = 4, height = 4)
dname <- "results/sentiment_A/exp_tolerance/"
tol_exp <- get_data(dname)
tol_exp %>% pivot_longer(c(acc_raw_clean, acc_raw_att, acc_acra_att),
names_to = "Algorithm") %>%
mutate(Algorithm = case_when(Algorithm == "acc_raw_clean" ~ "Raw Clean Data",
Algorithm == "acc_raw_att" ~ "Raw Attacked Data",
Algorithm == "acc_acra_att" ~ "ACRA Attacked Data",
TRUE ~ "be")) %>% group_by(tolerance, Algorithm) %>%
summarise(mean  = mean(value),
lower = mean(value) - 2*sd(value)/sqrt(10),
upper = mean(value) + 2*sd(value)/sqrt(10)) %>%
ggplot(aes(x = tolerance, y = mean, color=Algorithm, linetype=Algorithm)) +
geom_line(size=0.5) + geom_point() +
geom_errorbar(aes(ymin=lower, ymax=upper), size=0.5,
width=0.05,
size=0.1) + theme_minimal() +
labs(title    = "Tolerance vs Accuracy",
subtitle = "Random Forest, Number of Samples = 20",
x = "Tolerance",
y = "Accuracy") +
theme(axis.text.x=element_text(angle=-90, hjust=0, vjust=1)) +
theme(plot.title=element_text(size=15, hjust=0.5, face="bold", vjust=-1)) +
theme(plot.subtitle=element_text(size=12, hjust=0.5, vjust=-1)) +
theme(text = element_text(size=12))
ggsave("img/sent_tolerance.png", device = "png", dpi = 300, width = 5, height = 4)
dname <- "results/sentiment_A/exp_tolerance/"
tol_exp <- get_data(dname)
tol_exp %>% pivot_longer(c(acc_raw_clean, acc_raw_att, acc_acra_att),
names_to = "Algorithm") %>%
mutate(Algorithm = case_when(Algorithm == "acc_raw_clean" ~ "Raw Clean Data",
Algorithm == "acc_raw_att" ~ "Raw Attacked Data",
Algorithm == "acc_acra_att" ~ "ACRA Attacked Data",
TRUE ~ "be")) %>% group_by(tolerance, Algorithm) %>%
summarise(mean  = mean(value),
lower = mean(value) - 2*sd(value)/sqrt(10),
upper = mean(value) + 2*sd(value)/sqrt(10)) %>%
ggplot(aes(x = tolerance, y = mean, color=Algorithm, linetype=Algorithm)) +
geom_line(size=0.5) + geom_point() +
geom_errorbar(aes(ymin=lower, ymax=upper), size=0.5,
width=0.05,
size=0.1) + theme_minimal() +
labs(title    = "Tolerance vs Accuracy",
subtitle = "Random Forest, Number of Samples = 20",
x = "Tolerance",
y = "Accuracy") +
theme(axis.text.x=element_text(angle=-90, hjust=0, vjust=1)) +
theme(plot.title=element_text(size=15, hjust=0.5, face="bold", vjust=-1)) +
theme(plot.subtitle=element_text(size=12, hjust=0.5, vjust=-1)) +
theme(text = element_text(size=12))
ggsave("img/sent_tolerance.png", device = "png", dpi = 300, width = 5, height = 3)
nsamples_exp %>% pivot_longer(c(acc_raw_clean, acc_raw_att, acc_acra_att),
names_to = "Algorithm") %>%
mutate(Algorithm = case_when(Algorithm == "acc_raw_clean" ~ "Raw Clean Data",
Algorithm == "acc_raw_att" ~ "Raw Attacked Data",
Algorithm == "acc_acra_att" ~ "ACRA Attacked Data",
TRUE ~ "be")) %>% group_by(n_samples, Algorithm) %>%
summarise(mean  = mean(value),
lower = mean(value) - 2*sd(value)/sqrt(10),
upper = mean(value) + 2*sd(value)/sqrt(10)) %>%
ggplot(aes(x = n_samples, y = mean, color=Algorithm, linetype=Algorithm)) +
geom_line(size=0.5) + geom_point() +
geom_errorbar(aes(ymin=lower, ymax=upper), size=0.5,
position=position_dodge(0.05)) + theme_minimal() +
labs(title    = "Number of Samples vs Accuracy",
subtitle = "Random Forest. Tolerance = 2.",
x = "Number of Samples",
y = "Accuracy") +
theme(axis.text.x=element_text(angle=-90, hjust=0, vjust=1)) +
theme(plot.title=element_text(size=15, hjust=0.5, face="bold", vjust=-1)) +
theme(plot.subtitle=element_text(size=12, hjust=0.5, vjust=-1)) +
theme(text = element_text(size=12)) + theme(legend.position = "none")
ggsave("img/sent_nsamples.png", device = "png", width = 3, height = 3)
